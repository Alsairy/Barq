apiVersion: v1
kind: ConfigMap
metadata:
  name: barq-config
  namespace: barq-system
data:
  appsettings.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning"
        }
      },
      "AllowedHosts": "*",
      "ConnectionStrings": {
        "DefaultConnection": "Server=barq-database;Database=BarqDB;User Id=barq_user;Password=barq_password;TrustServerCertificate=true;"
      },
      "JwtSettings": {
        "SecretKey": "your-secret-key-here",
        "Issuer": "barq-api",
        "Audience": "barq-client",
        "ExpirationMinutes": 60
      },
      "Redis": {
        "ConnectionString": "barq-redis:6379"
      },
      "MultiTenancy": {
        "Enabled": true,
        "DefaultTenant": "default"
      }
    }
  database.conf: |
    max_connections = 200
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: barq-frontend-config
  namespace: barq-system
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        location /api/ {
            proxy_pass http://barq-backend-service:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
